package vista;

import java.awt.Color;
import java.awt.Dimension;

import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;

import juego.GameLoop;
import juego.SensorDeTeclas;

public class Ventana {
	private JFrame frame;
	private Dimension size;
	private JPanel panel;
	private JLabel mario;
	private ImageIcon marioQuieto;
	private ImageIcon marioQuieto2;
	private ImageIcon marioCaminando1;
	private ImageIcon marioCaminando2;
	private ImageIcon marioVolviendo1;
	private ImageIcon marioVolviendo2;
	private int posX = 50;
	private int posY = 50;
	private SensorDeTeclas sensorDeTeclas;
	private int ticksTotal;
	
	public Ventana(int width, int height, String title, GameLoop game) {
		size = new Dimension(width, height);
		frame = new JFrame(title);
		panel = new JPanel();
		marioQuieto = new ImageIcon("src/imagenes/marioQuieto.png");
		marioQuieto2 = new ImageIcon("src/imagenes/marioQuieto2.png");
		marioCaminando1 = new ImageIcon("src/imagenes/marioCaminando1.png");
		marioCaminando2 = new ImageIcon("src/imagenes/marioCaminando2.png");
		marioVolviendo1 = new ImageIcon("src/imagenes/marioVolviendo1.png");
		marioVolviendo2 = new ImageIcon("src/imagenes/marioVolviendo2.png");
        mario = new JLabel(marioQuieto);

		sensorDeTeclas = new SensorDeTeclas();
		
		frame.setPreferredSize(size);
	    frame.setMaximumSize(size);
	    frame.setMinimumSize(size);
	    
	    frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
	    frame.setResizable(false);
	    frame.setLocationRelativeTo(null);
	    frame.setVisible(true);
	    
	    panel.setPreferredSize(size);
	    panel.setMaximumSize(size);
	    panel.setMinimumSize(size);
	    panel.setBackground(Color.cyan);
	    
	    // Important: Add KeyListener to frame
	    frame.addKeyListener(sensorDeTeclas);  // Fix: Add the key listener to the frame
	    
	    panel.setLayout(null);  // Important: This allows free positioning of components
	    mario.setBounds(posX, posY, marioQuieto.getIconWidth(), marioQuieto.getIconHeight());  // Position the Mario JPanel
	    panel.add(mario);  // Add Mario to the panel

	    frame.add(panel);  // Add the panel to the frame
	}
	
	public void render() {
		panel.repaint();
	}
	
	public void moveMario() {
		if(ticksTotal == 1000) {
			ticksTotal = 0;
		}//sirve de algo? no quiero que los ticks se vayan al carajo cuando jugas por mucho tiempo
		if(sensorDeTeclas.obtenerDpresionada() && !sensorDeTeclas.obtenerApresionada() && posX < size.width - mario.getWidth()) {
			posX += 10;
			ticksTotal++;
			if(ticksTotal % 10 == 0) {
				mario.setIcon(marioCaminando1);					
			}else if(ticksTotal % 5 == 0){					
				mario.setIcon(marioCaminando2);					
			}
		}	
		else if(sensorDeTeclas.obtenerApresionada() && !sensorDeTeclas.obtenerDpresionada() && posX > 0) {
			posX -= 10;
			ticksTotal++;
			if(ticksTotal % 10 == 0) {
				mario.setIcon(marioVolviendo1);
			}else if(ticksTotal % 5 == 0){
				mario.setIcon(marioVolviendo2);
			}
		}else {
			if(mario.getIcon() == marioCaminando1 || mario.getIcon() == marioCaminando2) {
				mario.setIcon(marioQuieto);
			}else if(mario.getIcon() == marioVolviendo1 || mario.getIcon() == marioVolviendo2) {
				mario.setIcon(marioQuieto2);
			}
		}
		mario.setLocation(posX, posY);
	}
}
